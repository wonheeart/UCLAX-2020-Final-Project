{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/wonhee.lee/Desktop/UCLAX Frontend Bootcamp/My-Final-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/wonhee.lee/Desktop/UCLAX Frontend Bootcamp/My-Final-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/wonhee.lee/Desktop/UCLAX Frontend Bootcamp/My-Final-Project/src/App/Nav.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    background-color: #212121;\\n    color: white;\\n    text-align: center;\\n\\n    .hamburger {\\n        position: absolute;\\n        right: 20px;\\n        top: 20px;\\n\\n        cursor: pointer;\\n\\n        svg {\\n            color: whitesmoke;\\n            width: 40px;\\n            height: auto;\\n        }\\n\\n        display: block;\\n\\n        @media \", \" {\\n            display: none;\\n        }\\n    }\\n    \\n    a {\\n        display: inline-block;\\n\\n        text-align: center;\\n        font-size: 16px;\\n        background-color: #212121;\\n        color: darkgrey;\\n\\n        text-decoration: none;\\n\\n        margin-bottom: none;\\n        \\n        border-radius: 2px;\\n\\n        width: 100%;\\n        line-height: 60px;\\n\\n        @media \", \" {\\n            width: 100px;\\n            line-height: 50px; \\n            margin-right: 10px;\\n            margin-left: 10px;\\n            margin-bottom: 0px;\\n        }\\n        @media \", \" {\\n            width: 150px;\\n        }\\n\\n        &:hover {\\n            background-color: #313131;\\n        }\\n\\n        &.active {\\n            background-color: black;\\n        }\\n    }\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { mq } from '../common/mediaQueries.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\n\nvar Nav = function Nav() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showMenu = _useState2[0],\n      showMenuSet = _useState2[1];\n\n  var toggleMenu = function toggleMenu() {\n    console.log('You clicked thehamburger', showMenu);\n    showMenuSet(!showMenu);\n  }; // useEffect is for lifecycle events, like component mounted\n  // When we pass empty [] it triggers component mounted\n\n\n  useEffect(function () {\n    console.log('I have mounted');\n\n    var handleWindowSizeChange = function handleWindowSizeChange() {\n      var isItMobile = window.matchMedia(\"(max-width:499px)\");\n      console.log(isItMobile.matches);\n      showMenuSet(!isItMobile.matches);\n    }; // On Load / Component Mounts\n\n\n    handleWindowSizeChange(); // Every time Window is resized\n\n    window.addEventListener('resize', handleWindowSizeChange); // Clean Up our Listeners on dismount\n\n    return function () {\n      window.addEventListener('resize', handleWindowSizeChange);\n    };\n  }, []); // straight braces\n\n  return /*#__PURE__*/React.createElement(NavStyled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nested-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hamburger\",\n    onClick: toggleMenu,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faBars,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  })), showMenu && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Links\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/\",\n    exact: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, \"Welcome\"), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/Work\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, \"Work\"), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/contact\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, \"Contact\"))));\n};\n\nexport default Nav;\nvar NavStyled = styled.nav(_templateObject(), mq.tablet, mq.tablet, mq.desktop);","map":{"version":3,"sources":["/Users/wonhee.lee/Desktop/UCLAX Frontend Bootcamp/My-Final-Project/src/App/Nav.jsx"],"names":["React","useState","useEffect","styled","NavLink","mq","FontAwesomeIcon","faBars","Nav","showMenu","showMenuSet","toggleMenu","console","log","handleWindowSizeChange","isItMobile","window","matchMedia","matches","addEventListener","NavStyled","nav","tablet","desktop"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,SAASC,EAAT,QAAmB,2BAAnB;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACIC,MADJ,QAEO,mCAFP;;AAIA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBAEmBP,QAAQ,CAAC,KAAD,CAF3B;AAAA;AAAA,MAEPQ,QAFO;AAAA,MAEGC,WAFH;;AAId,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCJ,QAAxC;AACAC,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH,GAHD,CAJc,CASd;AACA;;;AACAP,EAAAA,SAAS,CAAC,YAAI;AACVU,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AAEA,QAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACjC,UAAMC,UAAU,GAAGC,MAAM,CAACC,UAAP,qBAAnB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYE,UAAU,CAACG,OAAvB;AAEAR,MAAAA,WAAW,CAAC,CAACK,UAAU,CAACG,OAAb,CAAX;AACH,KALD,CAHU,CAUV;;;AACAJ,IAAAA,sBAAsB,GAXZ,CAaV;;AACAE,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCL,sBAAlC,EAdU,CAgBV;;AACA,WAAO,YAAM;AACTE,MAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCL,sBAAlC;AACH,KAFD;AAIH,GArBQ,EAqBN,EArBM,CAAT,CAXc,CAgCN;;AAER,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AACI,IAAA,OAAO,EAAGH,UADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGQ,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAGJ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,CADJ,EAOYE,QAAQ,iBACR;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CARZ,CADJ,CADJ;AAmBH,CArDD;;AAuDA,eAAeD,GAAf;AAEA,IAAMY,SAAS,GAAGjB,MAAM,CAACkB,GAAV,oBAoBEhB,EAAE,CAACiB,MApBL,EA0CEjB,EAAE,CAACiB,MA1CL,EAiDEjB,EAAE,CAACkB,OAjDL,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nimport { mq } from '../common/mediaQueries.js';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n    faBars,\n} from '@fortawesome/free-solid-svg-icons';\n\nconst Nav = () => {\n\n    const [showMenu, showMenuSet ] = useState(false);\n\n    const toggleMenu = () => {\n        console.log('You clicked thehamburger', showMenu);\n        showMenuSet(!showMenu);\n    }\n\n    // useEffect is for lifecycle events, like component mounted\n    // When we pass empty [] it triggers component mounted\n    useEffect(()=>{\n        console.log('I have mounted');\n\n        const handleWindowSizeChange = () => {\n            const isItMobile = window.matchMedia(`(max-width:499px)`);\n            console.log(isItMobile.matches);\n\n            showMenuSet(!isItMobile.matches);\n        }\n\n        // On Load / Component Mounts\n        handleWindowSizeChange();\n\n        // Every time Window is resized\n        window.addEventListener('resize', handleWindowSizeChange);\n\n        // Clean Up our Listeners on dismount\n        return () => {\n            window.addEventListener('resize', handleWindowSizeChange);\n        }\n\n    }, []); // straight braces\n\n    return (\n        <NavStyled>\n            <div className=\"nested-wrapper\">\n                <div className=\"hamburger\"\n                    onClick={ toggleMenu }\n                    >\n                        <FontAwesomeIcon icon={ faBars } />\n                    </div>\n                    {\n                        showMenu &&\n                        <div className=\"Links\">\n                            <NavLink to=\"/\" exact>Welcome</NavLink>\n                            <NavLink to=\"/Work\">Work</NavLink>\n                            <NavLink to=\"/contact\">Contact</NavLink>\n                        </div>\n                    }\n                </div>\n        </NavStyled>\n    );\n}\n\nexport default Nav;\n\nconst NavStyled = styled.nav`\n    background-color: #212121;\n    color: white;\n    text-align: center;\n\n    .hamburger {\n        position: absolute;\n        right: 20px;\n        top: 20px;\n\n        cursor: pointer;\n\n        svg {\n            color: whitesmoke;\n            width: 40px;\n            height: auto;\n        }\n\n        display: block;\n\n        @media ${mq.tablet} {\n            display: none;\n        }\n    }\n    \n    a {\n        display: inline-block;\n\n        text-align: center;\n        font-size: 16px;\n        background-color: #212121;\n        color: darkgrey;\n\n        text-decoration: none;\n\n        margin-bottom: none;\n        \n        border-radius: 2px;\n\n        width: 100%;\n        line-height: 60px;\n\n        @media ${mq.tablet} {\n            width: 100px;\n            line-height: 50px; \n            margin-right: 10px;\n            margin-left: 10px;\n            margin-bottom: 0px;\n        }\n        @media ${mq.desktop} {\n            width: 150px;\n        }\n\n        &:hover {\n            background-color: #313131;\n        }\n\n        &.active {\n            background-color: black;\n        }\n    }\n\n`;"]},"metadata":{},"sourceType":"module"}