{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/wonhee.lee/Desktop/UCLAX Frontend Bootcamp/My-Final-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/wonhee.lee/Desktop/UCLAX Frontend Bootcamp/My-Final-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/wonhee.lee/Desktop/UCLAX Frontend Bootcamp/My-Final-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/wonhee.lee/Desktop/UCLAX Frontend Bootcamp/My-Final-Project/src/App/Pages/Contact/ContactForm.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n/* Scripts ---------------------------*/\n\nimport API from '../../../common/axios.js';\n/* Components ---------------------------*/\n\nimport FormGroup from '../../../common/Forms/FormGroup.jsx';\nimport Button from '../../../common/Forms/Button.jsx';\nvar formFields = {\n  nameField: {\n    id: 'userName',\n    label: 'Name',\n    inputType: 'text',\n    value: '',\n    validate: {\n      required: true,\n      valid: true,\n      message: ''\n    }\n  },\n  emailField: {\n    id: 'userEmail',\n    label: 'Email',\n    inputType: 'email',\n    value: '',\n    validate: {\n      required: true,\n      valid: true,\n      message: ''\n    }\n  },\n  messageField: {\n    id: 'userMessage',\n    label: 'Message',\n    inputType: 'textarea',\n    value: '',\n    validate: {\n      required: false,\n      valid: true,\n      message: ''\n    }\n  }\n};\n\nvar ContactForm = function ContactForm() {\n  var _useState = useState(formFields.nameField),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      userNameUpdate = _useState2[1];\n\n  var _useState3 = useState(formFields.emailField),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userEmail = _useState4[0],\n      userEmailUpdate = _useState4[1];\n\n  var _useState5 = useState(formFields.messageField),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userMessage = _useState6[0],\n      userMessageUpdate = _useState6[1];\n\n  var handleOnChange = function handleOnChange(event, formField) {\n    // console.log(event.target.value, formField);\n    var newField = _objectSpread(_objectSpread({}, formField), {}, {\n      value: event.target.value\n    });\n\n    if (newField.validate.required === true) {\n      console.log('Validating: ', newField.label);\n\n      if (newField.value.length < 4) {\n        // Let them know there is an error\n        newField.validate.valid = false;\n        newField.validate.message = \"You forgot to fill out the \".concat(newField.label, \" field.\");\n      } else {\n        // Clear any errors.\n        newField.validate.valid = true;\n        newField.validate.message = \"\";\n      }\n    }\n\n    if (formField.id === 'userName') {\n      userNameUpdate(newField);\n    }\n\n    if (formField.id === 'userEmail') {\n      userEmailUpdate(newField);\n    }\n\n    if (formField.id === 'userMessage') {\n      userMessageUpdate(newField);\n    }\n  };\n\n  var handleFormSubmit = function handleFormSubmit(event) {\n    event.preventDefault();\n    console.log('Captured Form Submit, we will take itr from here.');\n\n    if (userName.validate.valid === true && userEmail.validate.valid === true) {\n      console.log('Valid Submitting form.'); // .. AJAX\n\n      var postData = {\n        userName: userName,\n        userEmail: userEmail,\n        userMessage: userMessage\n      };\n      API.post('/sendEmail', postData).then(function (result) {\n        console.log('result', result);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ContactFormStyled, {\n    className: \"ContactForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleFormSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    formField: userName,\n    onChange: handleOnChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    formField: userEmail,\n    onChange: handleOnChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    formField: userMessage,\n    onChange: handleOnChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Send Email\")));\n};\n\nexport default ContactForm;\nvar ContactFormStyled = styled.div(_templateObject());","map":{"version":3,"sources":["/Users/wonhee.lee/Desktop/UCLAX Frontend Bootcamp/My-Final-Project/src/App/Pages/Contact/ContactForm.jsx"],"names":["React","useState","styled","API","FormGroup","Button","formFields","nameField","id","label","inputType","value","validate","required","valid","message","emailField","messageField","ContactForm","userName","userNameUpdate","userEmail","userEmailUpdate","userMessage","userMessageUpdate","handleOnChange","event","formField","newField","target","console","log","length","handleFormSubmit","preventDefault","postData","post","then","result","ContactFormStyled","div"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\n/* Scripts ---------------------------*/\nimport API from '../../../common/axios.js';\n\n/* Components ---------------------------*/\nimport FormGroup from '../../../common/Forms/FormGroup.jsx';\nimport Button from '../../../common/Forms/Button.jsx';\n\nconst formFields = {\n    nameField: {\n        id: 'userName',\n        label: 'Name',\n        inputType: 'text',\n        value: '',\n        validate: {\n            required: true,\n            valid: true,\n            message: '',\n        }\n    },\n    emailField: {\n        id: 'userEmail',\n        label: 'Email',\n        inputType: 'email',\n        value: '',\n        validate: {\n            required: true,\n            valid: true,\n            message: '',\n        }\n    },\n    messageField: {\n        id: 'userMessage',\n        label: 'Message',\n        inputType: 'textarea',\n        value: '',\n        validate: {\n            required: false,\n            valid: true,\n            message: '',\n        }\n    },\n}\n\n\nconst ContactForm = () => {\n\n    const [userName, userNameUpdate] = useState( formFields.nameField );\n    const [userEmail, userEmailUpdate] = useState( formFields.emailField) ;\n    const [userMessage, userMessageUpdate] = useState( formFields.messageField );\n\n    const handleOnChange = (event, formField) => {\n        // console.log(event.target.value, formField);\n\n        const newField = {\n            ...formField,\n            value: event.target.value,\n        }\n\n        if (newField.validate.required === true ) {\n            console.log('Validating: ', newField.label);\n\n            if (newField.value.length < 4) {\n                // Let them know there is an error\n                newField.validate.valid = false;\n                newField.validate.message = `You forgot to fill out the ${newField.label} field.`;\n            } else {\n                // Clear any errors.\n                newField.validate.valid = true;\n                newField.validate.message = ``;\n            }\n        }\n\n        if (formField.id === 'userName') {\n            userNameUpdate(newField);\n        }\n        if (formField.id === 'userEmail') {\n            userEmailUpdate(newField);\n        }\n        if (formField.id === 'userMessage') {\n            userMessageUpdate(newField);\n        }\n    }\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n        console.log('Captured Form Submit, we will take itr from here.');\n\n        if (userName.validate.valid === true && userEmail.validate.valid === true) {\n            console.log('Valid Submitting form.')\n\n            // .. AJAX\n            const postData = {\n                userName: userName,\n                userEmail: userEmail,\n                userMessage: userMessage,\n            }\n\n            API.post('/sendEmail', postData).then((result) => {\n                console.log('result', result);\n            });\n        }\n    }\n \n    return (\n        <ContactFormStyled className='ContactForm'>\n            <form onSubmit={ handleFormSubmit }>\n                <FormGroup \n                    formField={ userName }\n                    onChange={ handleOnChange }\n                />\n                <FormGroup \n                    formField={ userEmail }\n                    onChange={ handleOnChange }\n                />\n                <FormGroup \n                    formField={ userMessage }\n                    onChange={ handleOnChange }\n                />\n\n                <Button type='submit'>Send Email</Button>\n\n            </form> \n        </ContactFormStyled>\n    );\n}\n\nexport default ContactForm;\n\nconst ContactFormStyled = styled.div`\n    \n`;"]},"metadata":{},"sourceType":"module"}